{
  "name": "mod-validator",
  "version": "0.0.9",
  "description": "A js validation module inspired by laravel validation.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/overtrue/validator.js.git"
  },
  "keywords": [
    "validation",
    "validator",
    "laravel"
  ],
  "author": {
    "name": "Carlos"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/overtrue/validator.js/issues"
  },
  "homepage": "https://github.com/overtrue/validator.js",
  "readmeFilename": "README.md",
  "readme": "validator.js [![Build Status](https://travis-ci.org/overtrue/validator.js.png)](https://travis-ci.org/overtrue/validator.js) [![NPM version](https://badge.fury.io/js/mod-validator.svg)](http://badge.fury.io/js/mod-validator)\n============\n\n一个类似laravel的js验证模块.\n\n## 安装\n\n1. 在Nodejs使用\n\n  ```shell\n  $ npm install mod-validator\n  ```\n\n2. 浏览器里使用\n\n  下载本项目`lib/validator.js` 到您的项目目录,引入即可:\n\n  ```html\n  <script src=\"path/to/validator.js\"></script>\n  ```\n\n## 基本用法\n```javascript\nvar Validator = require(\"validator\");// 浏览器就不用这句了，Validator是全局变量\nvar rules = {\n  username: 'required|min:5',\n  password: 'required|confirmed|min:6|max:16',\n}\n\nvar data = {\n  username: 'test',\n  password: '123456',\n}\n\nvar v = Validator.make(data, rules); // 或者: var  v = new Validator(data, rules)\n\nif(v.fails()) {\n  console.log(v.messages());\n  //or\n  console.log(v.errors());\n}\n```\n\n### 定义验证规则\n  - \"|\" 分隔的字符串形式\n  ```javascript\n  var rules = {\n    username: 'required|min:5',\n    password: 'required|confirmed|min:6|max:16',\n    email: 'email'\n  }\n  ```\n\n  - 数组形式\n  ```javascript\n  var rules = {\n    username: ['required', 'min:5'],\n    password: ['required', ['confirmed'], ['min:6'], ['max:16'],\n    email: ['required', 'email']\n  }\n  ```\n\n### API\n - 获取验证结果\n   + 语法：\n     + `{Boolean}` `Validator.passes()` 是否通过\n     + `{Boolean}` `Validator.fails()` 是否验证失败\n   + 举例：\n   ```javascript\n    var rules = {\n      username: 'required|min:5',\n      password: 'required|confirmed|min:6|max:16',\n    }\n\n    var data = {\n      username: 'test',\n      password: '123456',\n    }\n\n    v = validator.make(data, rules);\n\n    if (v.passes()) {\n      // 如果全部通过验证\n    }\n    // 或者\n    if (v.fails()) {\n      // 如果没通过验证\n    }\n   ```\n\n - 自定义错误消息\n   + 语法：`{Void}` `Validator.mergeMessage(attribute [, message])`\n      - `Validator.mergeMessage({attributeName, message})`\n      - `Validator.mergeMessage('attributeName', 'message')`\n   + 属性替换：在消息字符串用使用`:attribute` 作为属性名占位符。\n   + 举例：\n    ```javascript\n    var messages = {\n       required: ':attribute 不能为空.',\n       // ...\n    }\n    ...\n    v = validator.make(data, rules);\n    v.mergeMessage(messages);\n    if(v.fails()) {\n      console.log(v.errors());\n    }\n\n    //------------------------------------------\n\n    v.mergeMessage({required: ':attribute 不能为空.'})\n    //以上用法等同于：\n    v.mergeMessage('required', ':attribute 不能为空.');\n    ```\n\n\n- 自定义属性别名\n  + 语法：`{Void}` `Validator.mergeAttribute(attribute [, alias])`\n    + `Validator.mergeAttribute({attributeName, alias})`\n    + `Validator.mergeAttribute('attributeName', 'alias')`\n  + 举例：\n\n  ```javascript\n  var attributes = {\n     username: '用户名',\n     password: '密码'\n     //...\n  }\n  v = validator.make(data, rules);\n  v.mergeAttribute(attributes);\n\n  if(v.fails()) {\n    console.log(v.messages());\n  }\n\n  //------------------------------------------\n\n  v.mergeAttribute({username: '用户名'})\n  // 以上等同于：\n  v.mergeAttribute('username', '用户名');\n  ```\n\n\n#License\n\nMIT",
  "_id": "mod-validator@0.0.9",
  "dist": {
    "shasum": "a30d52968687aa6e432a8c93c4a5d9b80e34befd"
  },
  "_from": "mod-validator@",
  "_resolved": "https://registry.npmjs.org/mod-validator/-/mod-validator-0.0.9.tgz"
}
